---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-rollouts-switching
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-rollouts-switching
rules:
- apiGroups: ["argoproj.io"]
  resources:
  - rollouts
  verbs: ["get", "list", "patch"]
- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-rollouts-switching
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-rollouts-switching
subjects:
- namespace: test
  kind: ServiceAccount
  name: argo-rollouts-switching
---
apiVersion: batch/v1
kind: Job
metadata:
  name: argo-rollouts-switching
spec:
  backoffLimit: 0
  #completions: 1
  parallelism: 1
  template:
    spec:
      containers:
        - image: gcr.io/cloud-builders/kubectl
          imagePullPolicy: Always
          name: argo-rollouts-switching
          command:
            - bash
            - /mnt/argo-rollouts-switching.sh
            - $(NAMESPACE)
            - $(JOB_NAME)
          env:
            - name: JOB_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['job-name']
                  #metadata.labels['app.kubernetes.io/name']
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: script
              mountPath: /mnt/argo-rollouts-switching.sh
              subPath: argo-rollouts-switching.sh
      restartPolicy: Never
      serviceAccountName: argo-rollouts-switching
      volumes:
        - name: script
          configMap:
            name: argo-rollouts-switching
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argo-rollouts-switching
data:
  argo-rollouts-switching.sh: |+
    #!/bin/bash -eux -o pipefail
    NAMESPACE=$1
    JOB_NAME=$2
    SPINNAKER_APPLICATION_NAME=$(kubectl -n $NAMESPACE get job $JOB_NAME -o jsonpath="{ .metadata.labels['app\.kubernetes\.io\/name'] }")
    if [ $? -ne 0 ]; then exit 1; fi

    kubectl -n $NAMESPACE get rollouts.argoproj.io --selector "app.kubernetes.io/name=$SPINNAKER_APPLICATION_NAME" -o name | xargs -I{} kubectl -n $NAMESPACE patch {} --patch '{"spec": {"paused": false}}' --type merge
